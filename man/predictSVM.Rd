% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predictSVM.R
\name{predictSVM}
\alias{predictSVM}
\title{Do prediction with a trained SVM on given data.}
\usage{
predictSVM(method = NULL, testDataFile = NULL, testDataX = NULL,
  testDataY = NULL, model = NULL, modelFile = NULL,
  readPredictions = FALSE, predictionsFile = NULL, extraParameter = "",
  verbose = FALSE, ...)
}
\arguments{
\item{method}{Name of the method/solver to use for testing. If NULL, a detectModelTypeFromFile will be called on the given model (or modelfile).}

\item{testDataFile}{File to read training data from. Cannot be specified at the same time as testDataX and testDataY. See notes.}

\item{testDataX}{Matrix to read training data from. Cannot be specified at the same time as testDataFile.}

\item{testDataY}{Matrix to read training label from. Cannot be specified at the same time as testDataFile. Optional, see notes.}

\item{model}{A trained SVM model. Cannot be specified at the same time as modelFile.}

\item{modelFile}{Path of the model file. Cannot be specified at the same time as model.}

\item{readPredictions}{Shall the predictions be read back into memory and added to the model?}

\item{predictionsFile}{File to which the predictions will be written.}

\item{extraParameter}{Extra parameters for solver in form of a string.}

\item{verbose}{Be verbose?}

\item{...}{Further parameters that will be passed to the createTestArguments function of the wrapper.}
}
\value{
An SVM Test Object, but with testError removed.
}
\description{
This is the main routine for predictions. If needed, it will add dummy labels to the data given and then call testSVM.
}
\note{
testDataFile and testDataX,testDataY are exclusive parameters, i.e. you cannot specify both.

Make sure the modelFile is a character string and not a factor! Else you might obtain strange modelfile arguments.

Prediction can work without labels. If labels are not provided, dummy labels will be created, as testSVM expects labels
Keep in mind that as the whole workflow is by command line, the unlabeled data on disk has to be first read, then labeled
with a dummy label and then written back to disk. This will take some I/O time.
}

